name: Release

on:
  push:
    branches: [ main, master ]

jobs:
  release:
    runs-on: ubuntu-latest
    if: "!contains(github.event.head_commit.message, 'chore: release')"

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
        token: ${{ secrets.GITHUB_TOKEN }}

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: 20
        cache: 'npm'
        registry-url: 'https://registry.npmjs.org'

    - name: Install dependencies
      run: npm ci

    - name: Check commit messages
      run: |
        # Check if commits since last release follow conventional commit format
        LAST_TAG=$(git describe --tags --abbrev=0 2>/dev/null || echo "")
        if [ -z "$LAST_TAG" ]; then
          # No previous tags, check all commits except merges and initial
          COMMIT_RANGE="--all"
        else
          # Check commits since last tag
          COMMIT_RANGE="${LAST_TAG}..HEAD"
        fi
        
        # Get commits that don't follow conventional format (excluding merges and release commits)
        NON_CONVENTIONAL=$(git log $COMMIT_RANGE --oneline --no-merges \
          --invert-grep --grep="^feat\|^fix\|^docs\|^style\|^refactor\|^perf\|^test\|^chore\|^build\|^ci\|^revert" \
          --grep="^chore: release\|^Initial commit" --invert-grep | head -5)
        
        if [ -n "$NON_CONVENTIONAL" ]; then
          echo "⚠️  Warning: Found commits that don't follow conventional commit format:"
          echo "$NON_CONVENTIONAL"
          echo ""
          echo "Please use conventional commit format: https://www.conventionalcommits.org/"
          echo "Examples: feat: add feature, fix: fix bug, docs: update readme"
        else
          echo "✅ All commits follow conventional commit format"
        fi

    - name: Run tests
      run: npm run test

    - name: Build project
      run: npm run build

    - name: Configure Git
      run: |
        git config --global user.name "github-actions[bot]"
        git config --global user.email "github-actions[bot]@users.noreply.github.com"

    - name: Check for conventional commits and release
      run: |
        # Check if there are any conventional commits since last release
        LAST_TAG=$(git describe --tags --abbrev=0 2>/dev/null || echo "")
        if [ -z "$LAST_TAG" ]; then
          # No previous tags, check all commits
          CONVENTIONAL_COMMITS=$(git log --oneline --grep="^feat\|^fix\|^perf\|BREAKING CHANGE" | wc -l)
          NON_CONVENTIONAL_COMMITS=$(git log --oneline --invert-grep --grep="^feat\|^fix\|^perf\|BREAKING CHANGE\|^chore: release\|^Merge\|^Initial commit" | wc -l)
        else
          # Check commits since last tag
          CONVENTIONAL_COMMITS=$(git log ${LAST_TAG}..HEAD --oneline --grep="^feat\|^fix\|^perf\|BREAKING CHANGE" | wc -l)
          NON_CONVENTIONAL_COMMITS=$(git log ${LAST_TAG}..HEAD --oneline --invert-grep --grep="^feat\|^fix\|^perf\|BREAKING CHANGE\|^chore: release\|^Merge" | wc -l)
        fi
        
        if [ "$CONVENTIONAL_COMMITS" -gt 0 ]; then
          echo "Found $CONVENTIONAL_COMMITS conventional commits. Creating release..."
          npm run release -- --ci
        elif [ "$NON_CONVENTIONAL_COMMITS" -gt 0 ]; then
          echo "Found $NON_CONVENTIONAL_COMMITS non-conventional commits. Creating patch release..."
          npm run release -- --ci --increment patch
        else
          echo "No commits found for release."
        fi
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
        NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}