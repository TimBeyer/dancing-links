name: CI

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

jobs:
  test:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [18, 20, 22]

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Setup Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Check commit messages for conventional format
      if: github.event_name == 'pull_request'
      run: |
        # Check commits in this PR for conventional commit format
        BASE_SHA="${{ github.event.pull_request.base.sha }}"
        HEAD_SHA="${{ github.event.pull_request.head.sha }}"
        
        # Get commits that don't follow conventional format (excluding merges)
        NON_CONVENTIONAL=$(git log $BASE_SHA..$HEAD_SHA --oneline --no-merges \
          --invert-grep --grep="^feat\|^fix\|^docs\|^style\|^refactor\|^perf\|^test\|^chore\|^build\|^ci\|^revert")
        
        if [ -n "$NON_CONVENTIONAL" ]; then
          echo "❌ Found commits that don't follow conventional commit format:"
          echo "$NON_CONVENTIONAL"
          echo ""
          echo "Please use conventional commit format: https://www.conventionalcommits.org/"
          echo "Examples: feat: add feature, fix: fix bug, docs: update readme"
          exit 1
        else
          echo "✅ All commits follow conventional commit format"
        fi

    - name: Run linting
      run: npm run lint

    - name: Check formatting
      run: npm run format:check

    - name: Build project
      run: npm run build

    - name: Run tests with coverage
      run: npm run cover

    - name: Display coverage summary
      run: npx nyc report --reporter=text-summary

    - name: Run benchmarks
      run: |
        echo "## Benchmark Results" >> $GITHUB_STEP_SUMMARY
        echo "### Node.js ${{ matrix.node-version }}" >> $GITHUB_STEP_SUMMARY
        echo "\`\`\`" >> $GITHUB_STEP_SUMMARY
        timeout 300s npm run benchmark 2>&1 | tee benchmark-output.txt || echo "Benchmark failed or timed out"
        cat benchmark-output.txt >> $GITHUB_STEP_SUMMARY
        echo "\`\`\`" >> $GITHUB_STEP_SUMMARY

    - name: Upload coverage to artifacts
      uses: actions/upload-artifact@v4
      if: matrix.node-version == 20
      with:
        name: coverage-report
        path: |
          coverage.lcov
          .nyc_output/